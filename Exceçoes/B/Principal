package B;
import java.util.InputMismatchException;
import java.util.Scanner;

public class Principal {
    private static Conta[] vet = new Conta[5];
    private static int contClientes = 0;
    private static Conta sessao;

    public static void logar(Scanner sc) throws SistemaExcecao{
        String usuario;
        String senha;
        sc.nextLine();
        System.out.println("Usuario: ");
        usuario = sc.nextLine();
        System.out.println("Senha: ");
        senha = sc.nextLine();
        try{
            for (int i=0; i<contClientes; i++){
                if ((vet[i].getUsuario().equals(usuario)) && vet[i].getSenha().equals(senha)){
                    sessao = vet[i];
                    System.out.println("Login efetuado com sucesso.");
                }
                if (sessao == null){
                    throw new SistemaExcecao();
                }
            }
        }catch (SistemaExcecao e){
            System.out.println("Cliente nao encontrado!");
        }
    }

    static Conta buscaConta(int num) throws SistemaExcecao{
        for (int j=0; j<contClientes; j++){
            if (vet[j].getNumero() == num){
                return vet[j];
            }
            throw new SistemaExcecao("Conta nao encontrada!");
        }
        return null;
    }

    public static void main(String[] args) throws SistemaExcecao, MoneyException {
        Scanner leitor = new Scanner(System.in);
        String nome, senha, usuario;
        int num = 1;
        float saldo;
        int opc;

        do {
            System.out.println("====MENU====");
            System.out.println("[1]Criar Conta");
            System.out.println("[2]Mostrar Contas");
            System.out.println("[3]Iniciar Sessao");
            System.out.println("[4]Depositar");
            System.out.println("[5]Sacar");
            System.out.println("[9]Finalizar Sessao");
            System.out.println("[0]Sair");
            opc = leitor.nextInt();

            switch (opc){
                case 1:
                    try{
                        if (contClientes == 5){
                            System.out.println("Número Maximo de Clientes Cadastrados Atingido.");
                            break;
                        }
                        leitor.nextLine();
                        System.out.println("Nome: ");
                        nome = leitor.nextLine();
                        System.out.println("Saldo: ");
                        saldo = leitor.nextFloat();
                        leitor.nextLine();
                        System.out.println("Senha: ");
                        senha = leitor.nextLine();
                        vet[contClientes] = new Conta(nome,senha,saldo,num);
                        contClientes++;
                        num++;
                        System.out.println("Conta Criada!");
                    } catch (MoneyException e){
                        System.out.println("Valor Insuficiente.");
                        leitor.nextLine();
                    } catch (InputMismatchException e){
                        System.out.println("Informacoes Invalidas.");
                        leitor.nextLine();
                    } catch (Exception e){
                        System.out.println("Erro: "+e.getMessage());
                        leitor.nextLine();
                    }
                    break;
                case 2:
                    for (int i=0; i<contClientes; i++){
                        System.out.println("Nome: "+vet[i].getNome());
                        System.out.println("Numero: "+vet[i].getNumero());
                        System.out.println("Saldo: "+vet[i].getSaldo());
                    }
                    break;
                case 3:
                   logar(leitor);
                   break;
                case 4:
                    try{
                        if (sessao == null) throw new SistemaExcecao();
                        System.out.println("Valor a Depositar:");
                        float v = leitor.nextFloat();
                        sessao.depositaDinheiro(v);
                    }catch (SistemaExcecao e){
                        System.out.println("Necessario login para efetuar o deposito.");
                    }catch (MoneyException e){
                        System.out.println("Valor Inválido.");
                    }
                    break;
                case 5:
                    try{
                        if (sessao == null) throw new SistemaExcecao();
                        System.out.println("Valor para Saque: ");
                        float v = leitor.nextFloat();
                        sessao.sacarDinheiro(v);
                        System.out.println("Saque realizado com sucesso.");
                    }catch (SistemaExcecao e){
                        System.out.println("Necessario efetuar o login para efetuar o saque.");
                    }catch (MoneyException e){
                        System.out.println("Saldo indisponível para saque.");
                    }
                    break;
                case 9:
                    if (sessao != null) {
                        sessao = null;
                        System.out.println("Logout realizado.");
                    } else System.out.println("Nenhuma conta logada.");
                    break;
            }
        }while (opc != 0);
    }
}
